- name: Insure Required Packages Are Installed
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - tar
    - wget
    - gcc
    - make
    - "{{ operating_system_specific[ansible_os_family].openssl }}"

- name: Check If Already Installed
  stat:
    path: "/usr/local/apr"
  register: __apr_exists

- name: Create Temporary Storage Location
  when: not __apr_exists.stat.exists
  file:
    state: directory
    path: "{{ apr_tmp_storage }}"

- name: Download APR
  when: not __apr_exists.stat.exists
  get_url:
    dest: "{{ apr_tmp_storage }}"
    url: http://mirror.nexcess.net/apache//apr/{{ apr_tar_archive }}
    checksum: "{{ apr_version_specific[apr_version].checksum }}"

- name: Unpack APR
  when: not __apr_exists.stat.exists
  unarchive:
    remote_src: yes
    src: "{{ apr_tmp_storage }}/{{ apr_tar_archive }}"
    dest: "{{ apr_tmp_storage }}"
    keep_newer: yes

- name: Configure APR for Linux
  when: not __apr_exists.stat.exists
  register: __apr_configure
  command: >
    ./configure
    chdir={{ apr_tmp_storage }}/{{ apr_name}}

- debug: var=__apr_configure.stdout_lines
  when: apr_debug

- name: Make APR
  when: not __apr_exists.stat.exists
  register: __apr_make
  make:
    chdir: "{{ apr_tmp_storage }}/{{ apr_name }}"

- debug: var=__apr_make.stdout_lines
  when: apr_debug


- name: Make Install APR
  when: not __apr_exists.stat.exists
  register: __apr_make_install
  make:
    chdir: "{{ apr_tmp_storage }}/{{ apr_name }}"
    target: install
  become: yes

- debug: var=__apr_make_install.stdout_lines
  when: apr_debug

- name: Download APR Utils
  when: not __apr_exists.stat.exists
  get_url:
    dest: "{{ apr_tmp_storage }}"
    url: http://mirror.nexcess.net/apache//apr/{{ apr_util_tar_archive }}
    checksum: "{{ apr_util_version_specific[apr_util_version].checksum }}"

- name: Unpack APR Utils
  when: not __apr_exists.stat.exists
  unarchive:
    remote_src: yes
    src: "{{ apr_tmp_storage}}/{{ apr_util_tar_archive}}"
    dest: "{{ apr_tmp_storage }}"
    keep_newer: yes

- name: Configure APR for Linux
  when: not __apr_exists.stat.exists
  register: __apr_utils_configure
  command: >
    ./configure --with-apr=/usr/local/apr
    chdir={{ apr_tmp_storage }}/{{ apr_util_name}}

- debug: var=__apr_utils_configure.stdout_lines
  when: apr_debug

- name: Make APR
  when: not __apr_exists.stat.exists
  register: __apr_utils_make
  make:
    chdir: "{{ apr_tmp_storage }}/{{ apr_util_name }}"

- debug: var=__apr_utils_make.stdout_lines
  when: apr_debug

- name: Make Install APR
  when: not __apr_exists.stat.exists
  register: __apr_utils_make_install
  make:
    chdir: "{{ apr_tmp_storage }}/{{ apr_util_name }}"
    target: install
  become: yes

- debug: var=__apr_utils_make_install.stdout_lines
  when: apr_debug
